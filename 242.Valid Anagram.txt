
class Solution {
    public boolean isAnagram(String s, String t) {
    if(s==null || t==null)
        return false;
 
    if(s.length()!=t.length())
        return false;
 
    int[] arr = new int[26];
    for(int i=0; i<s.length(); i++){
        arr[s.charAt(i)-'a']++;
        arr[t.charAt(i)-'a']--;
    }
 
    for(int i: arr){
        if(i!=0)
            return false;
    }
 
    }
}

bool isAnagram(char* s, char* t) {
    int a[26]={0},i=0;


    while (s[i] != '\0') {
        a[s[i]-'a']++;
        i++;
    }
    i=0;
    while (t[i] != '\0') {
        a[t[i]-'a']--;
        i++;
    }

    for (i = 0 ; i < 26 ; i++) {
        if (a[i] != 0) {
            return false;
        }
    }
    return true;
}



void reverseWords(char *s)
{
  char *word_begin = s;
  char *temp = s; 
  if(*temp==' '&&*++temp=='\0'){
      *s='\0';
      return;
      
  }
  *temp--;
  while( *temp!='\0' )
  {
    temp++;
    if (*temp == '\0')
    {
      rev(word_begin, temp-1);
    }
    else if(*temp == ' ')
    {
      rev(word_begin, temp-1);
      word_begin = temp+1;
    }
  } 
  
 
   
  rev(s, temp-1);

}
 
void rev(char *begin, char *end)
{
  char temp;
  while (begin < end)
  {
    temp = *begin;
    *begin++ = *end;
    *end-- = temp;
  }
}